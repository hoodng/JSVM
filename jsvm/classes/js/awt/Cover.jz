$package("js.awt");js.awt.Cover = function (comp) {var CLASS = js.awt.Cover, thi$ = CLASS.prototype;if (CLASS.__defined__) {return;}CLASS.__defined__ = true;var Class = js.lang.Class, Event = js.util.Event, DOM = J$VM.DOM, System = J$VM.System;thi$.showLoading = function (b) {b = b || false;if (b && this._coverView) {return;}_showCover.call(this, b, this.className + "_loading");};thi$.showResizeCover = function (b) {b = b || false;if (b && this._coverView) {return;}_showCover.call(this, b, this.className + "_resizecover");};thi$.showMoveCover = function (b) {b = b || false;if (b && this._coverView) {return;}_showCover.call(this, b, this.className + "_movecover");};thi$.showMaskCover = function (b) {b = b || false;if (b && this._coverView) {return;}_showCover.call(this, b, this.className + "_mask");};thi$.showDisableCover = function (b) {b = b || false;if (b && this._coverView) {return;}_showCover.call(this, b, this.className + "_disable");};thi$.showCover = function (b, style) {b = b || false;if (b && this._coverView) {return;}_showCover.call(this, b, (style || "jsvm_cover"));};var _showCover = function (b, style) {var cover = this._coverView;if (b) {if (cover == undefined) {cover = this._coverView = DOM.createElement("DIV");cover.className = style;cover.style.cssText = "position:absolute;";var el = this.view;if (typeof this.getLastResizer == "function") {el = this.getLastResizer() || this.view;}DOM.insertAfter(cover, el);this.adjustCover();}} else {if (cover && cover.className == style) {cover.style.cursor = "default";this.removeCover();}}};thi$.setCoverZIndex = function (z) {var cover = this._coverView;if (cover) {z = z || this.getZ();cover.style.zIndex = z;}};thi$.setCoverDisplay = function (show) {var cover = this._coverView;if (cover) {cover.style.display = show;}};thi$.adjustCover = function (bounds) {var cover = this._coverView, U = this._local;if (cover) {bounds = bounds || this.getBounds();DOM.setBounds(cover, bounds.x, bounds.y, bounds.width, bounds.height);}};thi$.removeCover = function () {if (this._coverView) {DOM.remove(this._coverView, true);delete this._coverView;}};thi$.isCovering = function () {return this._coverView != undefined;};};