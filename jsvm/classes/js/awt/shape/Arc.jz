$package("js.awt.shape");$import("js.awt.Shape");js.awt.shape.Arc = function (def, Runtime) {var CLASS = js.awt.shape.Arc, thi$ = CLASS.prototype;if (CLASS.__defined__) {this._init.apply(this, arguments);return;}CLASS.__defined__ = true;var Class = js.lang.Class, System = J$VM.System, Graph = Class.forName("js.awt.Graphics2D");thi$.getArc = function () {var M = this.def, u = this.getAttr("angleUnit") || Graph.RAD, s = M.startAngle, e = M.endAngle;s = Class.isNumber(s) ? Graph.deg2rad(s, u) : 0;e = Class.isNumber(e) ? Graph.deg2rad(e, u) : 2 * Math.PI;return {cx:M.cx, cy:M.cy, radius:M.radius, startAngle:s, endAngle:e, close:M.close};};thi$.relDraw = function (shape) {var layer = shape.getLayer();switch (layer.classType()) {case "js.awt.CanvasLayer":layer.drawArc(shape);break;default:break;}};thi$.hitDraw = function (shape) {var layer = shape.getLayer();switch (layer.classType()) {case "js.awt.CanvasLayer":layer.drawArc(shape, true);break;}};thi$.isFill = function () {return arguments.callee.__super__.apply(this, arguments) && (def.close !== "open");}.$override(this.isFill);thi$._init = function (def, Runtime) {if (def == undefined) {return;}def.classType = def.classType || "js.awt.shape.Arc";var r = def.radius;def.x = def.cx - r;def.y = def.cy - r;def.width = def.height = 2 * r;def.close = def.close || "open";arguments.callee.__super__.apply(this, arguments);}.$override(this._init);this._init.apply(this, arguments);}.$extend(js.awt.Shape);