$package("js.awt.shape");$import("js.awt.Shape");js.awt.shape.Line = function (def, Runtime) {var CLASS = js.awt.shape.Line, thi$ = CLASS.prototype;if (CLASS.__defined__) {this._init.apply(this, arguments);return;}CLASS.__defined__ = true;var Class = js.lang.Class, System = J$VM.System;thi$.getLine = function () {var M = this.def;return {x0:M.x0, y0:M.y0, x1:M.x1, y1:M.y1};};thi$.relDraw = function (shape) {var layer = shape.getLayer();switch (layer.classType()) {case "js.awt.CanvasLayer":layer.drawLine(shape);break;default:break;}};thi$.hitDraw = function (shape) {var layer = shape.getLayer();switch (layer.classType()) {case "js.awt.CanvasLayer":layer.drawLine(shape, true);break;}};thi$.isFill = function () {return false;}.$override(this.fill);thi$._init = function (def, Runtime) {if (def == undefined) {return;}def.classType = def.classType || "js.awt.shape.Line";def.x = Math.min(def.x0, def.x1);def.y = Math.min(def.y0, def.y1);var v;v = def.width = Math.abs(def.x1 - def.x0);def.width = v < 1 ? 1 : v;v = def.height = Math.abs(def.y1 - def.y0);def.height = v < 1 ? 1 : v;def.close = "open";arguments.callee.__super__.apply(this, arguments);}.$override(this._init);this._init.apply(this, arguments);}.$extend(js.awt.Shape);