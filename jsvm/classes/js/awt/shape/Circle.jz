$package("js.awt.shape");$import("js.awt.Shape");js.awt.shape.Circle = function (def, Runtime) {var CLASS = js.awt.shape.Circle, thi$ = CLASS.prototype;if (CLASS.__defined__) {this._init.apply(this, arguments);return;}CLASS.__defined__ = true;var Class = js.lang.Class, System = J$VM.System;thi$.getCircle = function () {var M = this.def;return {cx:M.cx, cy:M.cy, radius:M.radius};};thi$.relDraw = function (shape) {var layer = shape.getLayer();switch (layer.classType()) {case "js.awt.CanvasLayer":layer.drawCircle(shape);break;default:break;}};thi$.hitDraw = function (shape) {var layer = shape.getLayer();switch (layer.classType()) {case "js.awt.CanvasLayer":layer.drawCircle(shape, true);break;}};thi$._init = function (def, Runtime) {if (def == undefined) {return;}def.classType = def.classType || "js.awt.shape.Circle";var r = def.radius;def.x = def.cx - r;def.y = def.cy - r;def.width = def.height = 2 * r;arguments.callee.__super__.apply(this, arguments);}.$override(this._init);this._init.apply(this, arguments);}.$extend(js.awt.Shape);