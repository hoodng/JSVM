$package("js.awt.shape");$import("js.awt.Shape");js.awt.shape.Polygon = function (def, Runtime) {var CLASS = js.awt.shape.Polygon, thi$ = CLASS.prototype;if (CLASS.__defined__) {this._init.apply(this, arguments);return;}CLASS.__defined__ = true;var Class = js.lang.Class, System = J$VM.System, Graph = Class.forName("js.awt.Graphics2D");thi$.getLines = function () {var M = this.def;return {cmds:M.cmds, coords:M.coords};};thi$.relDraw = function (shape) {var layer = shape.getLayer();switch (layer.classType()) {case "js.awt.CanvasLayer":layer.drawPolygon(shape);break;default:break;}};thi$.hitDraw = function (shape) {var layer = shape.getLayer();switch (layer.classType()) {case "js.awt.CanvasLayer":layer.drawPolygon(shape, true);break;}};thi$._init = function (def, Runtime) {if (def == undefined) {return;}def.classType = def.classType || "js.awt.shape.Polygon";var r = Graph.vertices2Rect(def.coords);def.x = r.x;def.y = r.y;def.width = r.width;def.height = r.height;arguments.callee.__super__.apply(this, arguments);}.$override(this._init);this._init.apply(this, arguments);}.$extend(js.awt.Shape);