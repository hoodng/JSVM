$package("js.util");js.util.Locale = function (language, country) {var CLASS = js.util.Locale, thi$ = CLASS.prototype;if (CLASS.__defined__) {this._init.apply(this, arguments);return;}CLASS.__defined__ = true;var C = js.lang.Class, System = J$VM.System;CLASS.getDateSymbols = function (locale) {var res, symbols;if (locale && locale instanceof CLASS) {res = C.forName("js.text.resources." + locale.toString());symbols = res ? res.dateSymbols : undefined;}return symbols;};CLASS.getNumberSymbols = function (locale) {var res, symbols;if (locale && locale instanceof CLASS) {res = C.forName("js.text.resources." + locale.toString());symbols = res ? res.numrSymbols : undefined;}return symbols;};thi$.setLanguage = function (language) {this.language = C.isString(language) ? language : "";};thi$.getLanguage = function () {return this.language ? this.language.toLowerCase() : "";};thi$.setCountry = function (country) {this.country = C.isString(country) ? country : "";};thi$.getCountry = function () {return this.country ? this.country.toUpperCase() : "";};thi$.equals = function (locale) {return locale && (locale.getLanguage() === this.getLanguage()) && (locale.getCountry() === this.getCountry());};thi$.toString = function () {var language = this.getLanguage(), country = this.getCountry(), symbol = (language && country) ? "_" : "", buf = [];buf.push(language);buf.push(symbol);buf.push(country);return buf.join("");};thi$._init = function (language, country) {if (!C.isString(language) && !C.isString(country)) {return;}this.setLanguage(language);this.setCountry(country);};this._init.apply(this, arguments);};